
学习MYSQL主要还是学习通用的SQL语句，那么SQL语句包括增删改查，主要划分：
	DQL：（数据查询语言）： 查询语句，凡是select语句都是DQL;
	DML（数据操作语言）： insert delete update， 对表当中的数据进行增删改查
	DDL（数据定义语言）： create drop alter truncate，对表结构进行增删改
	TCL(事务控制语言)： commit提交事务 rollback回滚事务。(TCL中T是Transaction)
	DCL(数据控制语言)： grant授权、revoke撤销权限等
	
	命名规范：
		所有的标识符都是全部小写，单词和单词之间使用下划线进行衔接。
		
DDL	
	一、表的创建
		create table 表名(
		字段名1 数据类型, 
		字段名2 数据类型, 
		字段名3 数据类型
		);
		
		表名：建议以t_ 或者 tbl_开始，可读性强。表名和字段名都属于标识符。
		

		常见的数据类型：(255指的是符号的个数，一个字母、中文、数字都是一个符号)
			varchar						(最长255)
	
			char						(最长255)
			
			int						(最长11)等同于java的int。

			bigint						等同于java中的long。

			float						单精度浮点型数据

			double						双精度浮点型数据

			date					短日期类型:只包括年月日信息。

			datetime				长日期类型:包括年月日时分秒信息。
									   now():获取当前系统时间
									
			clob（Character Large OBject）
				最多可以存储4G的字符串。
				比如：存储一篇文章，存储一个说明。
				超过255个字符的都要采用CLOB字符大对象来存储。

			blob（Binary Large OBject）
				专门用来存储图片、声音、视频等流媒体数据。
				往BLOB类型的字段上插入数据的时候，例如插入一个图片、视频等，需要使用IO流才行。
				
		案例:创建一个学生表？	
			学号、姓名、年龄、性别、邮箱地址
			create table t_student(
				no int,
				name varchar(32),
				sex char(1),
				age char(3),
				email varchar(225)
				birth datetime
			）；
			
			
	二、快速创建表
		mysql> create table emp2 as select * from emp;

		原理：
			将一个查询结果当做一张表新建！！！！！
			这个可以完成表的快速复制！！！！
			表创建出来，同时表中的数据也存在了！！！
	
		create table mytable as select empno,ename from emp where job = 'MANAGER';
	
	1. 约束：constraint
			在创建表的时候，可以给表的一些字段添加约束，来保证表中数据的完整性和有效性
			
		约束包括：
			非空约束：not null
			唯一约束：unique
			主键约束：primary key
			外键约束：foreign key
			检查约束：check（mysql不支持）
		
		1.1 非空约束：not null
			非空约束not null约束的字段不能为null
		
			/*
				drop table if exists t_vip;
				create table t_vip (
					id int,
					name varchar(255) not null
				);
				insert into t_vip(id,name) value(1,'zhangshan');
				insert into t_vip(id) value(2);
			*/
		
		1.2 唯一性约束：unique	
			
			唯一性约束unique约束的字段不能重复，但是可以为null
			
			/*
				drop table if exists t_vip;
				create table t_vip (
					id int,
					name varchar(255) unique
				);
				insert into t_vip(id,name) value(1,'zhangshan');
				insert into t_vip(id,name) value(2,'zhangshan');
			*/
			
			
		新需求：name 和 id 两个字段联合起来具有唯一性
			
			/*
				drop table if exists t_student;
				create TABLE t_student(
					no int,
					name varchar(255),
					UNIQUE(no, name)
				); 
				insert into t_student value(1,"zijianye");
					INSERT into t_student value(2,"zijianye");
			*/
		
		新需求：not null 和 unique 可以联合吗？	可以，两者联合起来就成为主键约束
			
			/*
				drop table if exists t_student;
				create TABLE t_student(
					no int,
					name varchar(255) not null UNIQUE
				); 
						
				insert into t_student(no,name) value(1,'zhangshan');
				insert into t_student(no,name) value(2,'zhangshan');
			*/
		
		1.3 主键约束（非常重要）
			
			主键的特征：not null + unique 。
			
			单一主键：
				/*
					drop table if exists t_student;
					create TABLE t_student(
						id int PRIMARY key,
						name varchar(255),
					);
				*/
			
			复合主键：
				/*
					create table t_vip(
						id int,
						name varchar(255),
						email varchar(255),
						primary key(id,name)
					);
					insert into t_vip(id,name,email) values(1,'zhangsan','zhangsan@123.com');
					insert into t_vip(id,name,email) values(1,'lisi','lisi@123.com');
				*/
		在实际开发中，不建议使用复合主键，建议使用单一主键

		另外，主键只可有一个，不可以为多个
			
			
	二、删除表；
		drop table t_student;	//当这张表不存在的时候会报错
		
		drop table if exists t_student// 如果这张表存在的话，删除
				

				
				
				
				
				
				
				
				
				
				
				